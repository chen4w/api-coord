plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'java'
    id 'maven-publish'
    id 'com.google.protobuf' version '0.8.17'
}

group 'repchain.interface.cooperation'
version '1.0-SNAPSHOT'

def grpcVersion = '1.37.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.17.2'
def protocVersion = protobufVersion


repositories {
    mavenLocal()
    mavenCentral()
}

//禁掉jar task
jar.enabled = false
// 执行shadow的打包
shadowJar {
    archiveBaseName.set('Middleware')
    archiveClassifier.set('SNAPSHOT')
    archiveVersion.set('1.0')
    manifest {
        // 这里指定main class
        attributes 'Main-Class': 'repchain.inter.cooperation.middleware.App'
    }
}

assemble.dependsOn(shadowJar)

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation 'org.yaml:snakeyaml:1.29'
    implementation 'cn.hutool:hutool-all:5.7.16'
    implementation ('repchain:rcjava-core:0.4.3-SNAPSHOT') {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'mysql:mysql-connector-java:5.1.46'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'ch.qos.logback:logback-classic:1.2.6'
    implementation 'org.apache.commons:commons-pool2:2.5.0'
    implementation 'net.sf.ehcache:ehcache:2.10.2'
    implementation 'org.xerial:sqlite-jdbc:3.32.3.2'
    implementation 'com.alibaba:druid:1.2.8'
    implementation 'org.fusesource.jansi:jansi:1.17.1'
}
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}


task copyResources(type: Copy) {
    from sourceSets.main.resources
    into sourceSets.main.java.outputDir
    processResources.exclude { "**/*.*" }
}

processResources.dependsOn(copyResources)

test {
    useJUnitPlatform()
}


publishing {
    publications{
        library(MavenPublication){
            from components.java
        }
    }
    repositories{
        mavenLocal()
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
